/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package mckennajamesproject1;

/**
 *
 * @author jamck
 */
////////////////////////////////////////////////////////////////////////
/*

Welcome to my project. The BookStore class acts as the test harness class
as the user interacts with the book store here. The objects / items are
created in the inventory class.

 */
////////////////////////////////////////////////////////////////////////
import java.util.Scanner;

public class BookStore {

    // main method
    public static void main(String[] args) {
        // creating a new instance of the inventory class so I can referece it here
        Inventory inventory = new Inventory();

        System.out.println("WELCOME TO MY BOOK STORE");
        System.out.println("***************************************************");

        //import scanner
        Scanner scan = new Scanner(System.in);
        boolean leaveStore = false;
        boolean bookZero = false;
        boolean cdZero = false;
        boolean dvdZero = false;
        double totalMoney = 0.0;
        double totalMoneySpent = 0.0;
        inventory.setNumItems(0);
        int numMembers = 2;

        //while took to keep the program running while the user is in the store
        while (leaveStore == false) {

            System.out.println("Select From One Of The Following Options");
            System.out.println("\t 1. Make A Purchase");
            System.out.println("\t 2. MemberShip Status");
            System.out.println("\t 3. Inventory");
            System.out.println("\t 4. Exit");

            int userNum = scan.nextInt();
            // Condition for when the user enters a number that is not available
            while (userNum != 0 && (userNum < 1 || userNum > 4)) {
                System.out.println("Please enter a valid number between 1 and 4.");
                System.out.print("Enter the line number to order (1 - 4) or 0 to exit: ");
                userNum = scan.nextInt();
            }

            // total size of the inventory
            int totalSize = inventory.inventorySize();

            //switch case condition for user input
            switch (userNum) {
                case 1:
                    // PRINTS OUT ALL THE BOOKS / CDS AND DVDS
                    System.out.println("Select from the following of what you want to buy: ");
                    for (Book book : inventory.books) {
                        System.out.println(book.getNumber() + ". " + book.getTitle() + ": " + book.getQuantity() + " in stock" + " -- " + "$" + book.getPrice() + book.getType());
                    }

                    for (CD cd : inventory.CDs) {
                        System.out.println(cd.getNumber() + ". " + cd.getTitle() + ": " + cd.getQuantity() + " in stock" + " -- " + "$" + cd.getPrice() + cd.getType());
                    }

                    for (DVD dvd : inventory.DVDs) {
                        System.out.println(dvd.getNumber() + ". " + dvd.getTitle() + ": " + dvd.getQuantity() + " in stock" + " -- " + dvd.getPrice() + dvd.getType());
                    }

                    int orderBook = scan.nextInt();
                    // Condition for when the user enters a number that is not available
                    while (orderBook != 0 && (orderBook < 1 || orderBook > totalSize)) {
                        System.out.println("Please enter a valid number between 1 and " + totalSize + ".");
                        System.out.print("Enter the line number to order (1-" + totalSize + ") or 0 to exit: ");
                        orderBook = scan.nextInt();
                    }

                    int selectedBookType = 0;
                    // This makes it so that each category of items has a number, this makes it easier to do math with the numbers.
                    if (orderBook >= 1 && orderBook <= 3) {
                        selectedBookType = 1;
                    } else if (orderBook >= 4 && orderBook <= 6) {
                        selectedBookType = 2;
                    } else if (orderBook >= 7 && orderBook <= 8) {
                        selectedBookType = 3;
                    }

                    switch (selectedBookType) {
                        case 1: // case for if they select to buy a book
                            totalMoney = 0;
                            if (bookZero == false) {
                                for (Book book : inventory.books) {
                                    if (book.getNumber() == orderBook && bookZero == false) {
                                        inventory.setNumItems(inventory.getNumItems() + 1);
                                        totalMoney = totalMoney + book.getPrice();
                                        int newQuan = book.getQuantity();
                                        newQuan = (book.getQuantity() - 1);
                                        book.setQuantity(newQuan);
                                        if (newQuan == 0) {
                                            bookZero = true;
                                        }
                                        break;
                                    }
                                }
                            } else {
                                System.out.println("Out of Stock!");
                            }
                            break;

                        case 2: // case for if they select to buy a cd

                            if (cdZero == false) {
                                for (CD cd : inventory.CDs) {
                                    if (cd.getNumber() == orderBook && bookZero == false) {
                                        inventory.setNumItems(inventory.getNumItems() + 1);
                                        totalMoney = totalMoney + cd.getPrice();
                                        int newQuan = cd.getQuantity();
                                        newQuan = (cd.getQuantity() - 1);
                                        cd.setQuantity(newQuan);
                                        if (newQuan == 0) {
                                            cdZero = true;
                                        }
                                        break;
                                    }
                                }
                            } else {
                                System.out.println("Out of Stock!");
                            }
                            break;

                        case 3: // case for if they select to buy a dvd
                            if (dvdZero == false) {
                                for (DVD dvd : inventory.DVDs) {
                                    if (dvd.getNumber() == orderBook && dvdZero == false) {
                                        inventory.setNumItems(inventory.getNumItems() + 1);
                                        totalMoney = totalMoney + dvd.getPrice();
                                        int newQuan = dvd.getQuantity();
                                        newQuan = (dvd.getQuantity() - 1);
                                        dvd.setQuantity(newQuan);
                                        if (newQuan == 0) {
                                            dvdZero = true;
                                        }
                                        break;
                                    }
                                }
                            } else {
                                System.out.println("Out of Stock!");

                            }
                            break;
                    }

                    System.out.println("You have " + inventory.getNumItems() + " Items in your cart. Are you done shopping?");
                    System.out.println("1. Yes");
                    System.out.println("2. No");
                    int doneShopping = scan.nextInt();
                    // here the users decides if they want to checkout or buy more items
                    if (doneShopping == 1) {
                        inventory.setNumItems(0);
                        double discountTotal;
                        System.out.println("Please select which member is making this purchase");

                        int nextNumber = inventory.names.size() + 1; // Calculate the next number
                        for (int i = 0; i < inventory.names.size(); i++) {
                            Membership name = inventory.names.get(i);
                            System.out.println((i + 1) + " " + name.getName());
                        }

                        System.out.println(nextNumber + " Register a new member");

                        int newMemberCounter = inventory.names.size();

                        int memberPurchase = scan.nextInt();
                        // here is where the math happenws, the total money + totalmoney spent is added here
                        // total money is the total money they are spending now and totalMoneySpent is the amount of money they have spent at the store
                        if (memberPurchase > 0 && memberPurchase < nextNumber) {
                            System.out.println("Welcome back " + inventory.names.get(memberPurchase - 1).getName() + "!");

                            Membership selectedMember = inventory.names.get(memberPurchase - 1);
                            System.out.println("Your total today is $" + totalMoney + " dollars");
                            selectedMember.addToTotalMoneySpent(totalMoney); // Adding totalMoney once
                            System.out.println("Your total money spent here is $" + selectedMember.getTotalMoneySpent() + " dollars");

                        } else {
                            System.out.println("Lets get you registered as a new member");
                            System.out.println("Would you like to register as a regular member or Premium Member");
                            System.out.println("1. Regular Member ");
                            System.out.println("2. Premium Member ");
                            int regPrem = scan.nextInt();
                            // registration of a new member takes place here, They can either be a regular member or Premium member
                            while (regPrem != 0 && (regPrem < 1 || regPrem > 2)) {
                                System.out.println("Please enter a valid number between 1 and 2");
                                System.out.print("Enter the line number to order (1-2 or 0 to exit: ");
                                regPrem = scan.nextInt();
                            }
                            if (regPrem == 1) {
                                System.out.println("Please enter your name");
                                scan.nextLine();
                                String name = scan.nextLine();
                                System.out.println("Alright, you're all set, " + name);
                                System.out.println("Your total comes out to be $" + totalMoney + " Dollars ");
                                System.out.println("Thank you for shopping with us, have a nice day");
                                Membership newMember4 = new Membership(name, "Free-tier Member", false, totalMoney, "N/A");
                                inventory.names.add(newMember4);
                                inventory.setNumItems(0);
                                totalMoney = 0;

                            }
                            // if they are a premium member, they will have to then enter their payment method so that they can be charged for their supscription 
                            if (regPrem == 2) {
                                System.out.println("Please enter your name");
                                scan.nextLine();
                                String name = scan.nextLine();
                                System.out.println("Please enter your prefered method of payment");
                                System.out.println("1. Debit");
                                System.out.println("2. Credit");
                                int payment = scan.nextInt();
                                totalMoney = 0;
                                if (payment == 1) {
                                    String paymentMethod = ("Debit");
                                    System.out.println("Thank you" + name + " you will be billed through your debit card in 30 days for your supscription with us which is $5.00");
                                    Membership newMember4 = new Membership(name, "Debit", true, totalMoney, "30 days");
                                    inventory.names.add(newMember4);

                                    Membership selectedMember = inventory.names.get(memberPurchase - 1);
                                    System.out.println("Your total today is $" + totalMoney + " dollars");
                                    selectedMember.addToTotalMoneySpent(totalMoney);

                                    System.out.println("Thank you for shopping with us, have a nice day");
                                    inventory.setNumItems(0);
                                    totalMoney = 0;
                                }
                                if (payment == 2) {
                                    String paymentMethod = ("Credit");
                                    System.out.println("Thank you" + name + " you will be billed through your Credit card in 30 days for your supscription with us which is $5.00");
                                    Membership newMember4 = new Membership(name, "Credit", true, totalMoney, "30 days");
                                    inventory.names.add(newMember4);

                                    Membership selectedMember = inventory.names.get(memberPurchase - 1);
                                    System.out.println("Your total today is $" + totalMoney + " dollars");
                                    selectedMember.addToTotalMoneySpent(totalMoney);

                                    System.out.println("Thank you for shopping with us, have a nice day");
                                    inventory.setNumItems(0);
                                    totalMoney = 0;
                                }
                            }
                        }
                    }
                    break;

                // the second function of this project is being able to look at all the members of the store, this will update whenever a new member is added
                case 2:
                    System.out.println("Here are all of our registed members!");
                    for (int i = 0; i < inventory.names.size(); i++) {
                        Membership name = inventory.names.get(i);
                        System.out.println((i + 1 + ". ") + name.getName() + " pays with " + name.getPaymentMethod() + ", payment due in " + name.getPaymentDue());
                    }

                    break;
                // the third function works so that the user can view the inventory, this will update whenever a user buys an item
                case 3:
                    System.out.println("Here's what we have in store today! NEW RESTOCKS EVERY MONDAY");
                    System.out.println("***************************************************");
                    for (Book book : inventory.books) {
                        System.out.println(book.getNumber() + ". " + book.getTitle() + ": " + book.getQuantity() + " in stock" + " -- " + "$" + book.getPrice() + book.getType());
                    }

                    for (CD cd : inventory.CDs) {
                        System.out.println(cd.getNumber() + ". " + cd.getTitle() + ": " + cd.getQuantity() + " in stock" + " -- " + "$" + cd.getPrice() + cd.getType());
                    }

                    for (DVD dvd : inventory.DVDs) {
                        System.out.println(dvd.getNumber() + ". " + dvd.getTitle() + ": " + dvd.getQuantity() + " in stock" + " -- " + dvd.getPrice() + dvd.getType());
                    }
                    System.out.println("***************************************************");
                    break;
                // if the user wants to exit the program, they can press 4 and the program will terminate
                case 4:
                    System.out.println("Thank you for shopping with us, have a nice day");
                    System.exit(0);

            }

        }

    }

}
